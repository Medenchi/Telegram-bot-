import logging
import threading

from flask import Flask
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = '8124960394:AAFBpzmNFnl53Pjt-JE8y_S2CLb3ElpDcAo'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
TARGET_CHAT_ID = -1002516656067  # ID –≥—Ä—É–ø–ø—ã, –≥–¥–µ –∏—Å–∫–∞—Ç—å #–§–ë
NOTIFY_CHAT_ID = -1002344286804  # –ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ

# === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# === Telegram –±–æ—Ç ===
async def check_feedback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.effective_message
    chat = update.effective_chat

    if chat.type not in ['group', 'supergroup']:
        return

    text = message.text or ""
    
    if "#—Ñ–±" in text.lower():
        link = f"https://t.me/c/{str(chat.id)[4:]}/{message.message_id}"
        notification = f"üì¢ –í –≥—Ä—É–ø–ø–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–∏–¥–±—ç–∫!\n\n[–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ]({link})"
        
        await context.bot.send_message(
            chat_id=NOTIFY_CHAT_ID,
            text=notification,
            parse_mode="Markdown"
        )

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ ===
def run_bot():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    handler = MessageHandler(filters.TEXT & ~filters.COMMAND, check_feedback)
    app.add_handler(handler)
    app.run_polling()

# === Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è "–æ–∂–∏–≤–ª–µ–Ω–∏—è" Render/—Ö–æ—Å—Ç–∏–Ω–≥–∞ ===
app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run_flask():
    app.run(host='0.0.0.0', port=5000)

# === –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –≤–º–µ—Å—Ç–µ ===
if __name__ == '__main__':
    bot_thread = threading.Thread(target=run_bot)
    flask_thread = threading.Thread(target=run_flask)

    bot_thread.start()
    flask_thread.start()
